#!/usr/bin/env bash

# Define branches and basic configurations
SRC_BRANCH="master"
DEPLOY_BRANCH="gh-pages"
BUILD_DIR="_site"

USAGE_MSG="usage: deploy [-h|--help] [-u|--user] [-s|--src SRC_BRANCH] [-d|--deploy DEPLOY_BRANCH] [--verbose] [--no-push]"

# Parse command line arguments
while [[ $# > 0 ]]; do
    key="$1"
    case $key in
        -h|--help) echo $USAGE_MSG; exit 0 ;;
        -u|--user) SRC_BRANCH="source"; DEPLOY_BRANCH="master" ;;
        -s|--src) SRC_BRANCH="$2"; shift ;;
        -d|--deploy) DEPLOY_BRANCH="$2"; shift ;;
        --verbose) set -x ;;
        --no-push) NO_PUSH="--no-push" ;;
        *) echo "Unknown option $1"; echo $USAGE_MSG >&2; exit 1 ;;
    esac
    shift
done

set -e  # Exit if any subcommand fails
echo "Deploying..."
echo "Source branch: $SRC_BRANCH"
echo "Deploy branch: $DEPLOY_BRANCH"

# Ensure working directory is clean
git checkout $SRC_BRANCH
git pull origin $SRC_BRANCH  # Ensure latest is pulled
if ! git diff-index --quiet HEAD --; then
    echo "Uncommitted changes detected, please commit before deploying."
    exit 1
fi

# Build site in a separate directory
Jekyll build --destination $BUILD_DIR

# Switch to deploy branch, clean existing files, update with new build
git checkout $DEPLOY_BRANCH || git checkout -b $DEPLOY_BRANCH
git rm -rf .  # Remove old files
cp -r $BUILD_DIR/* .  # Copy new build files to branch root
rm -rf $BUILD_DIR  # Clean up build directory

# Commit and push changes
git add .
git commit -m "Deploy updates"
[[ $NO_PUSH ]] || git push -f origin $DEPLOY_BRANCH

# Switch back to the original branch without deleting deploy branch
git checkout $SRC_BRANCH
echo "Deployment successful!"
